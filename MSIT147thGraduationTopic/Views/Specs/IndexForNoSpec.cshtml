@model MSIT147thGraduationTopic.Models.ViewModels.SpecVM

@{
    Layout = "_BackstagePage";
    ViewData["Title"] = "商品規格檢視";
    string txtKeyword = Context.Request.Cookies["txtKeyword"] ?? "";
    int searchCondition = int.TryParse(Context.Request.Cookies["searchCondition"], out int temp1) ? temp1 : 1;
    int PageIndex = int.TryParse(Context.Request.Cookies["PageIndex"], out int temp2) ? temp2 : 1;
    int displayorder = int.TryParse(Context.Request.Cookies["displayorder"], out int temp3) ? temp3 : 0;
    int pageSize = int.TryParse(Context.Request.Cookies["pageSize"], out int temp4) ? temp4 : 10;
}

<div class="container">
    <h1 class="title">商品規格檢視</h1>

    <div class="bg-light rounded shadow p-5">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>
                        商品名稱
                    </th>
                    <th>
                        品牌
                    </th>
                    <th>
                        商品類別
                    </th>
                    <th>
                        商品說明
                    </th>
                    <th>
                        商品圖片
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td id="mName" style="min-width:110px"></td>
                    <td id="mBrand" style="min-width:100px"></td>
                    <td id="mCategory" style="min-width:100px"></td>
                    <td id="mDescription"></td>
                    <td><img id="mImage" class="imgtumbnail" /></td>
                </tr>
            </tbody>
        </table>
        <p>
            @Html.ActionLink("新增商品規格", "Create", "Specs", new {merchandiseId = ViewBag.MerchandiseId}, new { @class = "btn btn-primary" })
        </p>
        <hr />
        <table class="table table-hover">
            <tr>
                <td>
                    @Html.DisplayFor(model => model.SpecName)
                </td>
            </tr>
        </table>
        <div class="form-group">
            @Html.ActionLink("回到商品檢視", "Index", "Merchandises", new { txtKeyword = txtKeyword, searchCondition = searchCondition,
            PageIndex = PageIndex, displayorder = displayorder, pageSize = pageSize }, new { @class = "btn btn-secondary" })
        </div>
    </div>
</div>

@section Scripts {
    <!-- 產生商品資料 -->
    <script>
        const mName = document.querySelector("#mName");
        const mBrand = document.querySelector("#mBrand");
        const mCategory = document.querySelector("#mCategory");
        const mDescription = document.querySelector("#mDescription");
        const mImage = document.querySelector("#mImage");
        const merchandiseid = @ViewBag.MerchandiseId;

        $(() => {
            const xhr = new XMLHttpRequest();
            xhr.open("GET", `/ApiSpec/ShowMerchandise/${merchandiseid}`);
            xhr.send();

            xhr.addEventListener("load", () => {
                const datas = JSON.parse(xhr.responseText);
                const merchandise = datas[0];
                mName.innerHTML = merchandise.merchandiseName;
                mBrand.innerHTML = merchandise.brandName;
                mCategory.innerHTML = merchandise.categoryName;
                mDescription.innerHTML = merchandise.description;
                mImage.src = (merchandise.imageUrl != null)
                    ? "@Url.Content("~/uploads/merchandisePicture/")" + merchandise.imageUrl
                    : "@Url.Content("~/uploads/merchandisePicture/default.png")";
            })
        })
    </script>
}

@section Styles{
    <style>
        .title {
            margin-top: 30px;
            margin-bottom: 10px;
        }

        .imgtumbnail {
            max-width: 70px;
            min-width: 70px;
        }
    </style>
}